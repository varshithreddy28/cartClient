{"version":3,"sources":["components/nav.js","components/form.js","components/shoppinglist.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","Navbar","color","dark","light","expand","sticky","Container","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","FormInputs","handleSubmit","handleChange","name","modal","setModal","toggle","Button","size","block","Modal","ModalHeader","Form","onSubmit","ModalBody","FormGroup","Input","type","required","placeholder","onChange","value","ModalFooter","ShoppingList","setName","items","setItems","loading","setLoading","useEffect","axios","method","url","then","res","data","e","preventDefault","post","inputName","target","inputValue","class","ListGroup","map","item","timeout","classNames","ListGroupItem","id","_id","delete","filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc1d350e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,  \r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n//    Dont use div for stickytop\r\n     \r\n      <Navbar color=\"dark\" dark light expand=\"md\" sticky=\"top\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">ShoppingCart</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n                <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        \r\n      </Navbar>\r\n    \r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Form, FormGroup, Input } from 'reactstrap';\r\n\r\nconst FormInputs = ({handleSubmit,handleChange ,name}) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n            <Button color=\"secondary\" className=\"add\" size=\"lg\" block onClick={toggle} >Add Item</Button>\r\n      \r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Add Product</ModalHeader>\r\n        <Form onSubmit={handleSubmit}>\r\n        <ModalBody>\r\n            <FormGroup>\r\n                <Input type=\"text\" required name='name' placeholder=\"Item Name\" onChange={handleChange} value={name.name}/>\r\n            </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" size=\"lg\" block onClick={toggle} type=\"submit\">Add</Button>\r\n        </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormInputs;","import React,{useState,useEffect} from 'react'\r\nimport {Container,ListGroup,ListGroupItem,Button } from 'reactstrap'\r\n// Transion - fadeinfadeout\r\nimport {CSSTransition,TransitionGroup} from 'react-transition-group' \r\n// Fake ID's\r\n// import { v4 as uuid } from 'uuid';\r\nimport axios from 'axios'\r\n\r\nimport FormInputs from './form'\r\n\r\nconst ShoppingList = ()=>{\r\n    const url = 'https://cart-api-v1.herokuapp.com/item/api/new'\r\n    const url_GET = 'https://cart-api-v1.herokuapp.com/item/api/'\r\n\r\n    const [name, setName] = useState({name:''})\r\n    const [items, setItems] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        axios({\r\n        method: 'get',\r\n        url: url_GET,\r\n        })\r\n        .then((res)=>{\r\n            setLoading(false)\r\n            setItems(res.data)\r\n        })\r\n    },[])\r\n    const handleSubmit = (e)=>{\r\n       e.preventDefault()\r\n       axios.post(url,name)\r\n       .then((res)=>{\r\n           setItems([res.data,...items])\r\n           setName({name:''})\r\n       })\r\n    }\r\n    const handleChange = (e)=>{\r\n        const inputName = e.target.name\r\n        const inputValue = e.target.value\r\n        // IMPORTANT STEP FOR TAKING INPUTS\r\n        setName({...name,[inputName]:inputValue})\r\n    }\r\n    const deleteHandler = (id)=>{\r\n        axios.delete(`https://cart-api-v1.herokuapp.com/item/api/delete/${id}`)\r\n        .then(res=>{\r\n            setItems(items.filter((item)=>{\r\n                return item._id!==id\r\n            }))\r\n        })\r\n        \r\n    }\r\n    return(\r\n        <Container>\r\n            <div className=\"display\">                \r\n                    <FormInputs handleSubmit={handleSubmit} handleChange={handleChange} name={name}></FormInputs>\r\n                {/* ~<FormInput handleSubmit={handleSubmit} handleChange={handleChange} name={name}></FormInput> */}\r\n                {/* <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" required name='name' placeholder=\"Item Name\" onChange={handleChange} value={name.name}></input>\r\n                </form> */}\r\n                {/* <Button color=\"dark\" className=\"additems\" onClick={addHandler}>\r\n            Add Item</Button> */}\r\n                {loading? <div class=\"loader\"></div> :''}\r\n                <ListGroup>\r\n                    <TransitionGroup className=\"shopping-list\">\r\n                    {\r\n                    items.map((item)=>{\r\n                        return(\r\n                            <CSSTransition key={item._id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem >\r\n                                    <div>         \r\n                                        <Button className=\"remove\" size=\"sm\" onClick={()=>deleteHandler(item._id)}>&times;</Button>\r\n                                        <span className=\"items\">{item.name}</span>\r\n                                    </div>\r\n                                </ListGroupItem>\r\n                            </CSSTransition> \r\n                        )\r\n                    })\r\n                    }\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </div>\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\n// const FormInput = ({handleSubmit,handleChange ,name})=>{\r\n//     return(\r\n//         <form onSubmit={handleSubmit}>\r\n//                 <input type=\"text\" required name='name' placeholder=\"Item Name\" onChange={handleChange} value={name.name}></input>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\nexport default ShoppingList","import React from 'react'\n\nimport Navbar from './components/nav'\nimport ShoppingList from './components/shoppinglist'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      \n      <Navbar/>\n      <ShoppingList></ShoppingList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}